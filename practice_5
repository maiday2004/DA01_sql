-- ex1:
SELECT b.Continent, FLOOR(AVG(a.Population)) FROM CITY AS a
INNER JOIN COUNTRY AS b
ON a.CountryCode  = b.Code
GROUP BY b.Continent
-- ex2:
SELECT 
SELECT 
ROUND(SUM(CASE WHEN b.signup_action = 'Confirmed' THEN 1 ELSE 0 END)*1.0 / COUNT(b.signup_action),2)
FROM emails AS a LEFT JOIN texts AS b  
ON a.email_id  = b.email_id
WHERE 
  a.email_id IS NOT NULL
-- ex3:
SELECT
b.age_bucket,
ROUND(SUM(CASE WHEN a.activity_type = 'send' THEN time_spent ELSE 0 END)*100/SUM(a.time_spent),2) AS send_perc,
ROUND(SUM(CASE WHEN a.activity_type = 'open' THEN time_spent ELSE 0 END)*100/SUM(a.time_spent),2) AS open_perc
FROM
activities AS a 
INNER JOIN age_breakdown AS b 
ON a.user_id = b.user_id AND a.activity_type IN ('send', 'open')
GROUP BY b.age_bucket
-- ex4:
SELECT a.customer_id
FROM customer_contracts AS a  
INNER JOIN products AS b 
ON a.product_id = b.product_id
GROUP BY a.customer_id
HAVING COUNT(DISTINCT b.product_category) = 3;
-- ex5:
SELECT e1.employee_id, 
       e1.NAME, 
       COUNT(e2.reports_to)  AS reports_count, 
       ROUND(AVG(e2.age), 0) AS average_age 
FROM   employees AS e1 
       INNER JOIN employees AS e2 
               ON e1.employee_id = e2.reports_to 
GROUP  BY e1.employee_id, 
          e1.NAME 
ORDER  BY 1 ASC; 
-- ex6:
SELECT a.product_name, SUM(b.unit) AS unit FROM Products AS a 
LEFT JOIN Orders AS b
ON a.product_id = b.product_id
WHERE order_date BETWEEN '2020-02-01' AND '2020-02-29'
GROUP BY a.product_id
HAVING SUM(unit) >= 100
-- ex7:
SELECT a.page_id FROM pages AS a  
LEFT JOIN page_likes AS b 
ON a.page_id = b.page_id
WHERE b.page_id is null 
ORDER BY page_id ASC;
